version: '3'
services: 
  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=postgres_password    
  redis:
    image: 'redis:latest'    
  nginx:
    restart: always
    build:
      # context is to specify where the codes to be pulled from, which is the files in the server directory
      context: ./nginx
      dockerfile: Dockerfile.dev 
    ports:
      - '4000:80'   
  # a 3rd service for server
  api:
    build:
      # context is to specify where the codes to be pulled from, which is the files in the server directory
      context: ./server
      dockerfile: Dockerfile.dev
    volumes: 
      - /app/node_modules
      - ./server:/app/
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
  client:
    build:
      # context is to specify where the codes to be pulled from, which is the files in the server directory
      context: ./client
      dockerfile: Dockerfile.dev
    volumes: 
      - /app/node_modules
      - ./client:/app/
  worker:
    build:
      # context is to specify where the codes to be pulled from, which is the files in the server directory
      context: ./worker
      dockerfile: Dockerfile.dev
    volumes: 
      - /app/node_modules
      - ./worker:/app/
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379

# Add the following to your docker-compose.yml file in the postgres service:

#   postgres:
#     image: "postgres:latest"
#     environment:
#       - POSTGRES_PASSWORD=postgres_password
 
# docker-compose down  && docker-compose up --build    
